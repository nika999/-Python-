#!/usr/bin/env python
# coding: utf-8

# ### Prometheus "Основи програмування" (мовою Python)
# ##### Київський Політехнічний Інститут: Programming101

# #### Практичне завдання №2.1
# 
# Вхідні дані: 3 дійсних числа -- аргументи командного рядка.
# 
# Вихідні дані: результат обчислення формули
# 
# ![image.png](attachment:image.png)
# 
# Аргументи передаються в порядку, зазначеному у формулі, назви змінних можуть використовуватися будь-які.
# 
# Приклад
# Вхідні дані: 1 1 0.25
# Приклад виклику: python lab2_1.py 1 1 0.25
# Результат: 1.59576912161

# In[1]:


def test( b,c,a):
    import math
    x = 1/(a*math.sqrt(2*math.pi))* math.exp(-pow(b-c,2)/(2*pow(a,2)))
    return x
test(1, 1, 0.25)


# #### ПРАКТИЧНЕ ЗАВДАННЯ №3.1
# 0.0/2.0 бали (оцінюється)
# Вхідні дані: 3 дійсних числа a, b, c. Передаються в програму як аргументи командного рядка.
# 
# Результат роботи: рядок "triangle", якщо можуть існувати відрізки з такою довжиною та з них можна скласти трикутник, або "not triangle" -- якщо ні.
# 
# Наприклад
# 
# Вхідні дані: 10 20 30
# 
# Приклад виклику: python lab3_1.py 10 20 30
# 
# Результат: not triangle
# 
# Вхідні дані: 1 1 1
# 
# Приклад виклику: python lab3_1.py 1 1 1
# 
# Результат: triangle
# 
# Вхідні дані: 5.5 5.5 -2
# 
# Приклад виклику: python lab3_1.py 5.5 5.5 -2
# 
# Результат: not triangle

# In[3]:


def triangle( a,b,c):
    if a + b <= c or a + c <= b or b + c <= a:
        print('not triangle')
    else:
        print('triangle')
    
triangle(5.5,5.5,-2)  


# #### ПРАКТИЧНЕ ЗАВДАННЯ №3.2
# 0/2 бали (оцінюється)
# Програма має розраховувати числа послідовності Фібоначчі. Послідовність Фібоначчі -- це послідовність чисел, в якій кожний елемент дорівнює сумі двох попередніх. При цьому нульовий елемент вважається за 0, а перший 1. Отже, сама послідовність виглядає наступним чином:
# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, …
# 
# Вхідні дані: ціле невід'ємне число n. Передається в програму як аргумент командного рядка.
# 
# Результат роботи: значення n-го числа послідовності Фібоначчі.
# 
# Будь ласка, не використовуйте рекурсію.
# 
# Наприклад
# Вхідні дані: 0
# Приклад виклику: python lab3_2.py 0
# Результат: 0
# Вхідні дані: 10
# Приклад виклику: python lab3_2.py 10
# Результат: 55

# In[24]:


def fibanachi(a):
    fib = 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946
    print(fib[a])
    
fibanachi(10)


# In[ ]:




